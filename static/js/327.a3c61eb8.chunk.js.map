{"version":3,"file":"static/js/327.a3c61eb8.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/Phonebook/Phonebook.styled.js","components/Phonebook/Phonebook.jsx","components/Contacts/ContactItem/ContactItem.styled.js","components/Contacts/ContactItem/ContactItem.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SectionTitle = styled.h2`\n  font-size: ${p => p.theme.fontSizes.l}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;","import PropTypes from 'prop-types';\nimport { Box } from 'components/Box';\nimport { SectionTitle } from './Section.styled';\n\nexport const Section = ({ title, children }) => (\n  <Box\n    as=\"section\"\n    p={4}\n    display=\"flex\"\n    flexDirection=\"column\"\n    alignItems=\"center\"\n    justifyContent=\"center\"\n  >\n    <SectionTitle>{title}</SectionTitle>\n    {children}\n  </Box>\n);\n\nSection.propType = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object,\n};","import styled from '@emotion/styled';\n\nexport const FormBox = styled.form`\n  border: 1px solid white;\n  width: 400px;\n  padding: ${p => p.theme.space[4]}px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Error = styled.p`\n  color: red;\n`;","import { useForm } from 'react-hook-form';\nimport { Error, Label, FormBox } from './Phonebook.styled';\nimport {\n  useCreateContactMutation,\n  useGetContactsQuery,\n} from 'services/api';\nimport { useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\n\nexport const Phonebook = () => {\n  const { data: contacts } = useGetContactsQuery();\n  const [createContact, {isSuccess, isError }] =\n    useCreateContactMutation();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n    resetField,\n  } = useForm({\n    defaultValues: { name: '', number: '' },\n  });\n\n  const nameValue = watch('name');\n  const numberValue = watch('number');\n\n  const handleNewContact = newContact => {\n    if (!hasDuplicates(newContact.name)) {\n      createContact(newContact);\n      resetField('name');\n      resetField('number');\n    } else {\n      alert(`${newContact.name} is already in contacts.`);\n    }\n  };\n\n  const hasDuplicates = duplicate => {\n    return contacts.find(({ name }) => name === duplicate);\n  };\n\n\n  const onFormSubmit = evt => {\n    const newContact = {\n      name: nameValue,\n      number: numberValue,\n    };\n\n    handleNewContact(newContact);\n  };\n\n   useEffect(() => {\n    if (isSuccess) {\n      toast.success('Contact added');\n    }\n\n    if (isError) {\n      toast.error('Oops!! Something went wrong!');\n    }\n  }, [isSuccess, isError]);\n\n\n  return (\n    <FormBox onSubmit={handleSubmit(onFormSubmit)} autoComplete=\"off\">\n      <Label>\n        <span>Name</span>\n        <input\n          value={nameValue}\n          placeholder= \"Maks\"\n          type=\"text\"\n          {...register('name', {\n            required: { value: true, message: 'This field is required' },\n            pattern: {\n              value:\n                /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/g,\n              message:\n                \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            },\n          })}\n        />\n        {errors.name?.message && <Error>{errors.name?.message}</Error>}\n      </Label>\n      <Label>\n        <span>Number</span>\n        <input\n          value={numberValue}\n          placeholder = \"1234567890\"\n          type=\"tel\"\n          {...register('number', {\n            required: { value: true, message: 'This field is required' },\n            pattern: {\n              value:\n                /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/g,\n              message:\n                'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n            },\n          })}\n        />\n        {errors.number?.message && <Error>{errors.number?.message}</Error>}\n      </Label>\n      <button type=\"submit\">Add contact</button>\n    </FormBox>\n  );\n};\n\n","import styled from '@emotion/styled';\n\nexport const Contact = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;","import PropTypes from 'prop-types';\nimport { Contact } from './ContactItem.styled';\nimport { useDeleteContactByIdMutation } from 'services/api';\nimport { useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nexport const ContactsItem = ({ id, name, number }) => {\n    const [deleteContact, { isSuccess, isLoading, isError }] =\n    useDeleteContactByIdMutation();\n  \n    useEffect(() => {\n    if (isSuccess) {\n      toast.success('Contact deleted');\n    }\n\n    if (isError) {\n      toast.error('Oops!! Something went wrong!');\n    }\n  }, [isSuccess, isError]);\n\n  return (\n    <Contact>\n      {name}: {number}{' '}\n      <button type=\"button\" onClick={() => deleteContact(id)} disabled={isLoading}>\n        Delete\n      </button>\n    </Contact>\n  );\n};\n\nContactsItem.propType = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};","import styled from '@emotion/styled';\n\nexport const Contacts = styled.ul`\n  border: 1px solid white;\n  width: 400px;\n  padding: ${p => p.theme.space[4]}px;\n`;\n","import { ContactsItem } from './ContactItem/ContactItem';\nimport { Contacts} from './Contacts.styled';\nimport { useSelector } from 'react-redux';\nimport {selectContactsFilter} from '../../redux/slice';\nimport { useGetContactsQuery} from '../../services/api';\n\nexport const ContactsList = () => {\n  const { data: contacts} = useGetContactsQuery();\n  const filter = useSelector(selectContactsFilter);\n  const filteredContacts = contacts?.filter(({ name }) => name.toLowerCase().includes(filter));\n\n  return (\n    <Contacts>\n      {filteredContacts?.length ? (\n        filteredContacts.map(({ id, name, number }) => (\n          <ContactsItem\n            key={id}\n            name={name}\n            number={number}\n            id={id}\n          />\n        ))\n      ) : (\n        <li>No contacts</li>\n      )}\n    </Contacts>\n  );\n};\n\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  width: 400px;\n`;","import { Label } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport { addFilter, selectContactsFilter } from '../../redux/slice';\n\nexport const Filter = () => {\n  const { control } = useForm();\n  const filter = useSelector(selectContactsFilter);\n  const dispatch = useDispatch();\n  const onInputChange = evt => {\n    dispatch(addFilter(evt.target.value));\n  };\n\n    return (\n      <>\n        <form>\n          <Label>\n            <span>Find contacts</span>\n            <Controller  render={({ field }) => (\n              <input {...field} onChange={onInputChange} value={filter} />\n            )}\n            name=\"filter\"\n            control={control}\n            defaultValue=\"\"/>\n          </Label>\n        </form>\n      </>\n    );\n};\n\n","import { Section } from 'components/Section/Section';\nimport { Phonebook } from 'components/Phonebook/Phonebook';\nimport { ContactsList } from 'components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Phonebook />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactsList />\n      </Section>\n    </>\n  );\n};\n\nexport default ContactsPage;"],"names":["SectionTitle","styled","p","theme","fontSizes","l","space","Section","title","children","Box","as","display","flexDirection","alignItems","justifyContent","propType","PropTypes","FormBox","Label","Error","Phonebook","contacts","useGetContactsQuery","data","useCreateContactMutation","createContact","isSuccess","isError","useForm","defaultValues","name","number","register","handleSubmit","watch","errors","formState","resetField","nameValue","numberValue","hasDuplicates","duplicate","find","useEffect","toast","onSubmit","evt","newContact","alert","handleNewContact","autoComplete","value","placeholder","type","required","message","pattern","Contact","ContactsItem","id","useDeleteContactByIdMutation","deleteContact","isLoading","onClick","disabled","Contacts","ContactsList","filter","useSelector","selectContactsFilter","filteredContacts","toLowerCase","includes","length","map","Filter","control","dispatch","useDispatch","onInputChange","addFilter","target","render","field","onChange","defaultValue"],"sourceRoot":""}